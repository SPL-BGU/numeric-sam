((:init  (at driver1 s0) (at truck1 s0) (at package2 s1) (at driver2 s0) (at package3 s1) (at truck2 s1) (at package1 s2) (empty truck1) (empty truck2) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0))
(operators: (walk driver1 s0 p0-1) (nop ) (nop ) (dummy-add-predicate-action driver4) (nop ) (nop ) (nop ) (nop ))
(:state  (at truck1 s0) (at package2 s1) (at driver2 s0) (at driver1 p0-1) (at package3 s1) (at truck2 s1) (at package1 s2) (empty truck1) (empty truck2) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ))
(operators: (walk driver1 p0-1 s1) (dummy-add-predicate-action driver2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at truck1 s0) (at package2 s1) (at driver2 s0) (at driver1 s1) (at package3 s1) (at truck2 s1) (at package1 s2) (empty truck1) (empty truck2) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ))
(operators: (board-truck driver1 truck2 s1) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at truck1 s0) (at package2 s1) (at driver2 s0) (at package3 s1) (at truck2 s1) (at package1 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2))
(operators: (load-truck driver1 truck2 package2 s1) (nop ) (dummy-add-predicate-action driver3) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at truck1 s0) (at driver2 s0) (at package3 s1) (at truck2 s1) (at package1 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2) (in package2 truck2))
(operators: (load-truck driver1 truck2 package3 s1) (nop ) (nop ) (nop ) (nop ) (nop ) (dummy-add-predicate-action driver7) (nop ))
(:state  (at truck1 s0) (at driver2 s0) (at truck2 s1) (at package1 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2) (in package2 truck2) (in package3 truck2))
(operators: (drive-truck driver1 s1 s2 truck2) (nop ) (nop ) (nop ) (nop ) (dummy-add-predicate-action driver6) (nop ) (nop ))
(:state  (at truck1 s0) (at truck2 s2) (at driver2 s0) (at package1 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2) (in package2 truck2) (in package3 truck2))
(operators: (load-truck driver1 truck2 package1 s2) (nop ) (nop ) (nop ) (dummy-add-predicate-action driver5) (nop ) (nop ) (nop ))
(:state  (at driver2 s0) (at truck1 s0) (at truck2 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2) (in package2 truck2) (in package1 truck2) (in package3 truck2))
(operators: (unload-truck driver1 truck2 package2 s2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at driver2 s0) (at truck1 s0) (at truck2 s2) (at package2 s2) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (dummy-additional-predicate ) (driving driver1 truck2) (in package1 truck2) (in package3 truck2))
(operators: (drive-truck driver1 s2 s0 truck2) (nop ) (nop ) (nop ) (nop ) (nop ) (nop ) (dummy-del-predicate-action driver8))
(:state  (at truck1 s0) (at package2 s2) (at driver2 s0) (at truck2 s0) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0)  (driving driver1 truck2) (in package1 truck2) (in package3 truck2))
(operators: (unload-truck driver1 truck2 package3 s0) (nop ) (nop ) (nop ) (dummy-del-predicate-action driver5) (nop ) (nop ) (nop ))
(:state  (at truck1 s0) (at package2 s2) (at driver2 s0) (at package3 s0) (at truck2 s0) (empty truck1) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (driving driver1 truck2) (in package1 truck2) )
(operators: (unload-truck driver1 truck2 package1 s0) (board-truck driver2 truck1 s0) (nop ) (nop ) (nop ) (nop ) (dummy-del-predicate-action driver7) (nop ))
(:state  (at truck1 s0) (at package2 s2) (at package3 s0) (at truck2 s0) (at package1 s0)  (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (driving driver2 truck1) (driving driver1 truck2)  )
(operators: (nop ) (drive-truck driver2 s0 s2 truck1) (dummy-del-predicate-action driver3) (nop ) (nop ) (nop ) (nop ) (nop ))
(:state  (at package2 s2) (at package3 s0) (at truck2 s0) (at package1 s0) (at truck1 s2) (path p2-1 s2) (path p0-1 s1) (path s2 p0-2) (path p0-1 s0) (path s0 p0-2) (path p0-2 s2) (path s1 p0-1) (path s2 p2-1) (path p0-2 s0) (path s0 p0-1) (path s1 p2-1) (path p2-1 s1) (link s1 s2) (link s0 s2) (link s2 s0) (link s2 s1) (link s0 s1) (link s1 s0) (driving driver2 truck1) (driving driver1 truck2) )
)