(define (problem ZTRAVEL-1-3)
(:domain zeno-travel)
(:objects
	plane1 - aircraft
	person1 - person
	person2 - person
	person3 - person
	city0 - city
	city1 - city
	city2 - city
	city3 - city
	city4 - city
	city5 - city
	city6 - city
	)
(:init
	(at plane1 city5)
	(= (capacity plane1) 7054)
	(= (fuel plane1) 94)
	(= (slow-burn plane1) 3)
	(= (fast-burn plane1) 6)
	(= (onboard plane1) 0)
	(= (zoom-limit plane1) 9)
	(at person1 city1)
	(at person2 city3)
	(at person3 city1)
	(= (distance city0 city0) 0)
	(= (distance city0 city1) 526)
	(= (distance city0 city2) 948)
	(= (distance city0 city3) 542)
	(= (distance city0 city4) 805)
	(= (distance city0 city5) 662)
	(= (distance city0 city6) 544)
	(= (distance city1 city0) 526)
	(= (distance city1 city1) 0)
	(= (distance city1 city2) 675)
	(= (distance city1 city3) 847)
	(= (distance city1 city4) 703)
	(= (distance city1 city5) 645)
	(= (distance city1 city6) 532)
	(= (distance city2 city0) 948)
	(= (distance city2 city1) 675)
	(= (distance city2 city2) 0)
	(= (distance city2 city3) 622)
	(= (distance city2 city4) 507)
	(= (distance city2 city5) 733)
	(= (distance city2 city6) 742)
	(= (distance city3 city0) 542)
	(= (distance city3 city1) 847)
	(= (distance city3 city2) 622)
	(= (distance city3 city3) 0)
	(= (distance city3 city4) 886)
	(= (distance city3 city5) 511)
	(= (distance city3 city6) 803)
	(= (distance city4 city0) 805)
	(= (distance city4 city1) 703)
	(= (distance city4 city2) 507)
	(= (distance city4 city3) 886)
	(= (distance city4 city4) 0)
	(= (distance city4 city5) 932)
	(= (distance city4 city6) 611)
	(= (distance city5 city0) 662)
	(= (distance city5 city1) 645)
	(= (distance city5 city2) 733)
	(= (distance city5 city3) 511)
	(= (distance city5 city4) 932)
	(= (distance city5 city5) 0)
	(= (distance city5 city6) 918)
	(= (distance city6 city0) 544)
	(= (distance city6 city1) 532)
	(= (distance city6 city2) 742)
	(= (distance city6 city3) 803)
	(= (distance city6 city4) 611)
	(= (distance city6 city5) 918)
	(= (distance city6 city6) 0)
	(= (total-fuel-used) 0)
)
(:goal (and
	(at person1 city6)
	(at person2 city0)
	(at person3 city3)
	))

(:metric minimize (+ (* 4 (total-time))  (* 2 (total-fuel-used))))
)
